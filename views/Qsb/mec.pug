<!doctype html>
html(lang="es")
  head
    
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    
    link(href="https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css" rel="stylesheet")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet")
    link(rel="stylesheet", href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap5.min.css")
    link(rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css")
    link(rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css")
    <link href="//cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    title Polimetal S.A
    link(rel="stylesheet" href="/stylesheets/styleIndex.css")
  body
   
    div(class="d-flex")
        div(id="sidebar-container" class="bg-primary")
            div(class="logo")
                img(src="/images/favicon.ico" alt="" class="d-inline-block")
                h4(class="text-light font-weight-bold d-inline-block")= `Polimetal S.A - ${sector}` 
            div(class="menu")
                a(href="/" class="d-block p-1 text-light"     )
                    i(class="icon ion-md-home m-2 lead") Inicio
             
                hr
                
                h6(class="p-3 text-light") Sectores
                a(href="iny?sector=Inyeccion" class="d-block p-1 text-light") Inyeccion
                a(href="cc?sector=TTCC" class="d-block p-1 text-light") TT & CC
                a(href="mec?sector=Mecanizado" class="d-block p-1 text-light") Mecanizado
                a(href="vent?sector=Ventilado" class="d-block p-1 text-light") Ventilado 
                a(href="pint?sector=Pintura" class="d-block p-1 text-light") Pintura
                a(href="log?sector=Logistica" class="d-block p-1 text-light") Logistica
                
                
                ul.logout
                    li
                        .logout-container
                        img(src="/images/usuario.png" alt="" width="50px")
                        p.d-block.p-3.text-light= nombre
                        a(href="/logout" class="d-block p-3.text-light")
                            i.icon.ion-md-log-in.m-2.lead Logout
               
               
                        
                
        
        div(class="w-100")
            div(class="container")
                <nav class="navbar navbar-light bg-light">
                    <div class="container-fluid">
                        button#menu-toggle.btn.btn-outline-primary ☰
                        h3(class="navbar-brand") Reunion de respuesta rapida
                        

                        <form class="d-flex">
                            
                            <button class="btn btn-outline-success" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal">+ Agregar a Plan de accion</button>

                            <button class="btn btn-outline-success" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal1">+ Agregar Datos</button>
                        </form>

                    </div>
                    

                </nav>
                label(class="form-label") Seleccione el Mes
                        select(name="mes" class="form-select" id="mes")
                            option(value="1") Enero
                            option(value="2") Febrero
                            option(value="3") Marzo
                            option(value="4") Abril
                            option(value="5") Mayo
                            option(value="6") Junio
                            option(value="7") Julio
                            option(value="8") Agosto
                            option(value="9") Septiembre
                            option(value="10") Octubre
                            option(value="11") Noviembre
                            option(value="12") Diciembre
                | 
                label(class="form-label") Seleccione el Año 
                    input(type="number", name="year", class="form-control", min="2024", id="year")
                    
                | 
                label(class="form-label") Sector 
                    select(name="sector" id="sector" class="form-select")
                        option(value="Mecanizado") Mecanizado
                        option(value="Diamantado") Diamantado
                | 
                
                <button class="btn btn-outline-success" type="button" id="consultar">Consultar</button>
                .container 
                    
                    h4= "SEGUIMIENTO DIARIO - "+sector
                    
                    .row 
                        .col-6 
                            img(src="/images/actosInseguros.jpg", alt="", style="border-radius:50%;height:70px;width:100px;")
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart"></canvas>
                            </div>
                        .col-6
                            img(src="/images/reject.png", alt="", style="border-radius:50%;height:70px;width:100px;")
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart2"></canvas>
                            </div>
                        .col-12
                            img(src="/images/objetive.png", alt="", style="border-radius:50%;height:70px;width:100px;")  
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart3"></canvas>
                            </div>
                    .row 
                        .col-6 
                            img(src="/images/ot.jpg", alt="", style="border-radius:50%;height:70px;width:100px;")
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart4"></canvas>
                            </div>
                        .col-6
                            img(src="/images/moldes.png", alt="", style="border-radius:50%;height:70px;width:100px;") 
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart5"></canvas>
                            </div>
                    .row 
                        .col-12
                            img(src="/images/objetive.png", alt="", style="border-radius:50%;height:70px;width:100px;")  
                            <div style="width: 100%; height: 250px;">
                                <canvas id="myChart6"></canvas>
                            </div>
                    hr
                    table(class="table table-striped table-hover" id="table2")
                        thead 
                            th Id
                            th Fecha 
                            th Observaciones 
                            th Accion
                        tbody()
                        
                   
                    
                        
                    
                        
                        
                <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                            <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">+ Nueva Deteccion</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                
                                <form class="d-flex" action="actionplan" method="POST">                               
                                            input(type="hidden", name="sector1" value=sector)
                                            <label class="form-label"> Fecha
                                            <input type="date", name="fecha" class="form-control" required>
                                            <label class="form-label"> Sector
                                            select(name="sector", class="form-select")
                                                option(value="Matriceria") Matriceria
                                                option(value="Inyeccion") Inyeccion 
                                                option(value="TTCC") TT&CC
                                                option(value="Mecanizado") Mecanizado
                                                option(value="Ventilado") Ventilado
                                                option(value="Pintura") Pintura
                                                option(value="Laca") Laca
                                                option(value="Diamantado") Diamantado
                                                option(value="Mantenimiento") Mantenimiento 
                                                option(value="RRHH") RRHH 
                                                option(value="Logistica") Logistica 
                                                option(value="HHSS") HHSS 
                                                option(value="Gerencia") Gerencia 
                                                option(value="Ingenieria") Ingenieria
                                                option(value="Compras") Compras
                                            <label class="form-label"> Descripcion
                                            <textarea name="descripcion" class="form-control"></textarea>
                                            <label class="form-label"> Accion
                                            <textarea name="accion" class="form-control"></textarea>
                                            <label class="form-label"> Responsable
                                            <input type="text", name="responsable" class="form-control">
                                            select(name="sector_resp", class="form-select")
                                                option(value="Matriceria") Matriceria
                                                option(value="Inyeccion") Inyeccion 
                                                option(value="TTCC") TT&CC
                                                option(value="Mecanizado") Mecanizado
                                                option(value="Ventilado") Ventilado
                                                option(value="Pintura") Pintura
                                                option(value="Laca") Laca
                                                option(value="Diamantado") Diamantado
                                                option(value="Mantenimiento") Mantenimiento 
                                                option(value="RRHH") RRHH 
                                                option(value="Logistica") Logistica 
                                                option(value="HHSS") HHSS 
                                                option(value="Gerencia") Gerencia 
                                                option(value="Ingenieria") Ingenieria
                                                option(value="Compras") Compras
                                            <label class="form-label"> Comentario
                                            <textarea name="comentario" class="form-control"></textarea>
                                            <label class="form-label"> Estado
                                            select(name="estado", class="form-select")
                                                option(value="No Iniciado") No Iniciado
                                                option(value="En Proceso") En Proceso
                                                option(value="Completado") Completado
                                            <label class="form-label"> Fecha Tentativa
                                            <input type="date", name="fecha_tent" class="form-control">
                                            <label class="form-label"> Fecha de Cierre
                                            <input type="date", name="fecha_cierre" class="form-control">
                                                            
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                <button type="submit" class="btn btn-primary">Guardar</button>
                            </div>
                            </div>
                            </form>
                    </div>
                </div>
                <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                            <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">+ Carga de Datos del dia</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                
                                <form class="d-flex" method="POST" action="agregaraccion">    
                                            input(type="hidden", name="path" value="/Qsb/mec")                           
                                            input(type="hidden" name="disp_molde" value="NULL")
                                            input(type="hidden" name="ret_laca" value="NULL")
                                            input(type="hidden" name="sc_laca" value="NULL")
                                            input(type="hidden" name="entregas" value="NULL")
                                            <label class="form-label"> Fecha
                                            <input type="date" name="fecha" class="form-control" required>
                                            <label class="form-label"> Sector
                                            select(name="sector", class="form-select")
                                                
                                                option(value="Mecanizado") Mecanizado
                                                
                                                option(value="Diamantado") Diamantado
                                                
                                            <label class="form-label"> Accidentes
                                            <input type="number", name="accidentes" class="form-control" id="accidentes">
                                            <label class="form-label"> Scrap
                                            <input type="number" step="0.01" name="scrap" class="form-control" id="scrap">
                                            <label class="form-label"> Cumplimiento de Programa
                                            <input type="number" step="0.01" name="c_programa" class="form-control" id="c_programa">
                                            <label class="form-label"> Disponibilidad Mantenimiento
                                            <input type="number" step="0.01" name="disponibilidad" class="form-control" id="c_programa">
                                            <label class="form-label"> Retrabajo
                                            <input type="number" step="0.01" name="retrabajo" class="form-control" id="c_programa">
                                            <label class="form-label"> Horas Reales
                                            <input type="number"  name="hsReal" class="form-control" id="hsReal" >
                                            <label class="form-label"> Variable del Area
                                            <input type="number" step="0.001" name="hs_rd" class="form-control" id="hs_rd" >
                                            <label class="form-label"> Ruedas ok Reales
                                            <input type="number" step="0.01" name="rds_real" class="form-control" id="rds_real" >
                                            <label class="form-label"> Observaciones 
                                            textarea(name="observaciones", cols="30", rows="5" class="form-control") 
                                           
                                            
                                                           
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                <button type="submit" class="btn btn-primary">Guardar</button>
                            </div>
                            </div>
                            </form>                         
                    </div>
                </div>


    script(src="https://code.jquery.com/jquery-3.5.1.js")
    
    script(src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js")
    script(src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js")   
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous")

    script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous")
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.2.0/chartjs-plugin-datalabels.min.js" integrity="sha512-JPcRR8yFa8mmCsfrw4TNte1ZvF1e3+1SdGMslZvmrzDYxS69J7J49vkFL8u6u8PlPJK+H3voElBtUCzaXj+6ig==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    script.
        document.addEventListener("DOMContentLoaded", function() {
            const menuToggle = document.getElementById('menu-toggle');
            const sidebarContainer = document.getElementById('sidebar-container');

            menuToggle.addEventListener('click', function() {
                sidebarContainer.classList.toggle('active');
            });
        });
        
        $(document).ready(function () {
                        
                            
                            
                           
                            
                    });
        document.addEventListener('DOMContentLoaded',function(){
            initChart();
            initChart2();
            initChart3();
            initChart4();
            initChart5();
            initChart6();
            var tabla2 = $('#table2').DataTable();
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; 
            const currentYear = currentDate.getFullYear();
            document.getElementById('mes').value = currentMonth;
            document.getElementById('year').value = currentYear;
            updateChart(currentMonth, currentYear,"Mecanizado");

            let cons = document.getElementById('consultar');
            cons.addEventListener('click', (e) => {
            e.preventDefault();
            
            updateChart();
            });
            function initChart() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart').getContext("2d");
                let chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Accidentes',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart;
            }
            function initChart2() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart2').getContext("2d");
                let chart2 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Scrap',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5,6.5],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                
                            },
                            x:{
                            beginAtZero: true,
                            stacked:true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart2;
            }
            function initChart3() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart3').getContext("2d");
                let chart3 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Cumplimiento de Programa',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                
                            },
                            x:{
                            beginAtZero: true,
                            stacked:true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart3;
            }
            function initChart4() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart4').getContext("2d");
                let chart4 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Disponibilidad MTTO',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                
                            },
                            x:{
                            beginAtZero: true,
                            stacked:true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart4;
            }
            function initChart5() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart5').getContext("2d");
                let chart5 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Retrabajo',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                
                            },
                            x:{
                            beginAtZero: true,
                            stacked:true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart5;
            }
            function initChart6() {
                // Crea el gráfico en la carga de la página
                let ctx = document.getElementById('myChart6').getContext("2d");
                let chart6 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                        datasets: [{
                            label: 'Seguimiento de mano de obra',
                            data: [], // Los datos se actualizarán más tarde
                            borderWidth: 1
                        },
                        {
                            type: 'line',
                            label: 'Objetivo',
                            data: [0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                
                            },
                            x:{
                            beginAtZero: true,
                            stacked:true
                            }
                        }
                    },
                    plugins:[ChartDataLabels]
                });

                return chart6;
            }
            
            
        }) 
        function updateChart(){
                function fecha(x){
                    let f = new Date(x);
                    let dia=f.getDate();
                    let mes = f.getMonth()+1;
                    let año = f.getUTCFullYear();
                    let fecha = dia+"/"+mes+"/"+año;
                    return fecha
                }
                var mes = document.getElementById('mes').value;
                var year = document.getElementById('year').value;
                var sector = document.getElementById('sector').value;
                
                var tabla2 = document.getElementById('table2');
                
                tabla2.innerHTML="";
                

                
                fetch(`/Qsb/datos?sector=${sector}&mes=${mes}&year=${year}`)
                    .then(response => response.json())
                    .then(datos =>{
                        

                        let chart = Chart.instances[0];
                        chart.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: datos.map(e => e.accidentes),
                                    label:'Accidentes',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#007bff',
                                    borderWidth: 4,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    align:'top',
                                    font:{
                                        weight:'bold'
                                    },
                                    
                                    }
                                },
                                {
                                    data: datos.map(e => 0),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 4,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                            }
                        chart.update();

                        let chart2 = Chart.instances[1];
                            chart2.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: datos.map(e => e.scrap),
                                    label:'Scrap',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    borderWidth: 1,
                                    borderRadius:5,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    offset:'top',
                                    anchor:'end',
                                    font:{
                                        weight:'bold',
                                        
                                    }
                                    }
                                
                                },
                            
                                {
                                    data: datos.map(e => e.sector==="Mecanizado" ? 1.2 : 3),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 2,
                                    
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                                }  
                        chart2.update(); 

                        let chart3 = Chart.instances[2];
                            chart3.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: datos.map(e => e.c_programa),
                                    label:'Cumplimiento de Programa',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    borderWidth: 1,
                                    borderRadius:5,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    offset:'top',
                                    anchor:'end',
                                    font:{
                                        weight:'bold',
                                        
                                    }
                                    }
                                
                                },
                            
                                {
                                    data: datos.map(e => 100),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 2,
                                    
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                                } 
                        chart3.update();  

                        let chart4 = Chart.instances[3];
                            chart4.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: datos.map(e => e.disponibilidad),
                                    label:'Disponibilidad MTTO',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    borderWidth: 1,
                                    borderRadius:5,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    offset:'top',
                                    anchor:'end',
                                    font:{
                                        weight:'bold',
                                        
                                    }
                                    }
                                
                                },
                            
                                {
                                    data: datos.map(e => 95),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 2,
                                    
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                                } 
                        chart4.update();  

                        let chart5 = Chart.instances[4];
                            chart5.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: datos.map(e => e.retrabajo),
                                    label:'Retrabajo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    borderWidth: 1,
                                    borderRadius:5,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    offset:'top',
                                    anchor:'end',
                                    font:{
                                        weight:'bold',
                                        
                                    }
                                    }
                                
                                },
                            
                                {
                                    data: datos.map(e => e.sector==="Mecanizado" ? 1.5 : 20),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 2,
                                    
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                                } 
                        chart5.update();
                        const indicadores = datos.map(e => {
                                    const hsreal = e.hsReal;
                                    const hs_rd = e.hs_rd;
                                    const rds_real = e.rds_real;
                                    const rds_teoricas = hsreal / hs_rd;
                                    const indicador = rds_real / rds_teoricas;
                                    const ind = 0.9 / indicador;
                                    return parseFloat(ind.toFixed(3));;
                                });
                        let chart6 = Chart.instances[5];
                            chart6.data = {
                                labels: datos.map(e => fecha(e.fecha)),
                                
                                datasets: [{
                                    data: indicadores,
                                    label:'Seguimiento de mano de obra',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    borderWidth: 1,
                                    borderRadius:5,
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    offset:'top',
                                    anchor:'end',
                                    font:{
                                        weight:'bold',
                                        
                                    }
                                    }
                                
                                },
                            
                                {
                                    data: datos.map(e => 0.9),
                                    label:'Objetivo',
                                    type:'line',
                                    lineTension: 0,
                                    backgroundColor: 'transparent',
                                    borderColor: '#990606',
                                    borderWidth: 2,
                                    
                                    pointBackgroundColor: '#007bff',
                                    datalabels:{
                                    display:false
                                    }
                                }],
                                
                                
                                } 
                        chart6.update();

                        $('#table2').DataTable().destroy();
                        let dataset=[];
                            for(let i=0;i<datos.length;i++){
                                if(datos[i].observaciones){
                                    var dat=[
                                datos[i].id,
                                fecha(datos[i].fecha),
                                datos[i].observaciones,
                                '<a href="editarIndicador?id=' + datos[i].id + '" class="btn btn-primary btn-edit">Editar</a>'
                                
                                ]
                                dataset.push(dat);
                                }
                            
                            }
                        $('#table2').DataTable({
                            
                            dom: 'Bfrtlip',
                            paging:false,
                            data:dataset,
                            
                        }); 
                    })
            } 
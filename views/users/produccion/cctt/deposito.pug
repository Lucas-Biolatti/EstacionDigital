doctype html
html(lang="es")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        title Gestión de Stock
        
        link(href="https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css" rel="stylesheet")
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet")
        link(rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap5.min.css")
        link(rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css")
        link(rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css")

        style.
            body {
                font-family: Arial, sans-serif;
                text-align: center;
            }
            .container {
                display: flex;
                justify-content: center;
                align-items: flex-start;
                gap: 20px;
                margin-top: 20px;
            }
            .grid {
                display: grid;
                grid-template-columns: repeat(var(--columnas), 1fr);
                gap: 2px;
                width: 100%; /* Ajuste dinámico */
            }
            .grid-wrapper {
                display: flex;
                align-items: start;
            }
            .fila-numeros {
                display: flex;
                flex-direction: column;
                align-items: center;
                margin-right: 5px; /* Espaciado entre los números y la grilla */
            }
            .fila-numero {
                width: 30px; /* Tamaño fijo para alinear con las filas de la grilla */
                height: 50px; /* Debe coincidir con la altura de las celdas */
                display: flex;
                justify-content: center;
                align-items: center;
                font-weight: bold;
                border: 1px solid #000;
            }
            .grid-container {
                display: grid;
                grid-template-columns: repeat(7, 1fr); /* Se actualizará en JS */
                gap: 5px;
            }
            .cell {
                width: 80px;
                height: 80px;
                border: 1px solid #000;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: space-between;
                cursor: pointer;
                background-color: lightgray;
                position: relative;
            }
            .half {
                width: 100%;
                height: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                border-bottom: 1px solid #000;
            }
            .occupied-low {
                background-color: steelblue;
                color: white;
            }
            .occupied-high {
                background-color: darkblue;
                color: white;
            }
            .table-container {
                border: 1px solid #000;
                padding: 10px;
                background: white;
            }
            table {
                width: 100%;
                border-collapse: collapse;
            }
            th, td {
                border: 1px solid black;
                padding: 8px;
                text-align: center;
            }
            th {
                background-color: #f2f2f2;
            }
    
    body
        h1 Gestión de Stock - Depósito
        div.container
            div
                div.grid-wrapper
                    div#filaNumeros.fila-numeros
                    div#grid.grid-container
            div.table-container
                h2 Resumen de Stock
                table
                    thead
                        tr
                            th Código de Pieza
                            th Cantidad Total
                    tbody#stockTable
        
        // Modal para agregar pallets
        div#modal.modal.fade(tabindex="-1", aria-labelledby="modalLabel", aria-hidden="true")
            div.modal-dialog
                div.modal-content
                    div.modal-header
                        h5#modalLabel.modal-title Agregar Pallet
                        button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Cerrar")
                    div.modal-body
                        div.mb-3
                            label.form-label(for="codigo_pieza") Código de pieza:
                            input#codigo_pieza.form-control(type="text", placeholder="Ingrese código de pieza")
                        div.mb-3
                            label.form-label(for="altura") Altura:
                            select#altura.form-select
                                option(value="baja") Baja
                                option(value="alta") Alta
                    div.modal-footer
                        button#guardarPallet.btn.btn-primary Guardar
                        button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cerrar
        
        script(src="https://code.jquery.com/jquery-3.5.1.js")
        script(src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js")
        script(src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js")   
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js")
        script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js")
        script(src="https://cdn.jsdelivr.net/npm/chart.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.2.0/chartjs-plugin-datalabels.min.js")
        
       
        script.
            const filas = 34;
            const columnas = 8;
            const grid = document.getElementById('grid');
            const filaNumeros = document.getElementById('filaNumeros');
            const modal = new bootstrap.Modal(document.getElementById('modal'));
            const codigoPiezaInput = document.getElementById('codigo_pieza');
            const alturaSelect = document.getElementById('altura');
            let selectedFila, selectedCol;
            const stockTable = document.getElementById('stockTable');

            function renderGrid(pallets) {
                grid.style.setProperty('--columnas', columnas);
                grid.style.gridTemplateColumns = `repeat(${columnas}, 1fr)`; 
                grid.innerHTML = '';
                filaNumeros.innerHTML = '';
                const stockSummary = {};

                for (let fila = 1; fila <= filas; fila++) {
                    const filaNumero = document.createElement('div');
                    filaNumero.classList.add('fila-numero');
                    filaNumero.textContent = fila;
                    filaNumeros.appendChild(filaNumero);

                    for (let col = 1; col <= columnas; col++) {
                        const cell = document.createElement('div');
                        cell.classList.add('cell');
                        cell.dataset.fila = fila;
                        cell.dataset.columna = col;

                        const lowPart = document.createElement('div');
                        lowPart.classList.add('half');
                        lowPart.dataset.altura = "baja";

                        const highPart = document.createElement('div');
                        highPart.classList.add('half');
                        highPart.dataset.altura = "alta";

                        const palletLow = pallets.find(p => p.fila === fila && p.posicion === col && p.altura === "baja");
                        const palletHigh = pallets.find(p => p.fila === fila && p.posicion === col && p.altura === "alta");

                        if (palletLow) {
                            lowPart.classList.add('occupied-low');
                            lowPart.textContent = `${palletLow.codigo_pieza} - cant: ${palletLow.cantidad}`;
                            stockSummary[palletLow.codigo_pieza] = (stockSummary[palletLow.codigo_pieza] || 0) + palletLow.cantidad;
                            lowPart.onclick = () => removePallet(palletLow.id);
                        } else {
                            lowPart.onclick = () => openModal(fila, col, "baja");
                        }

                        if (palletHigh) {
                            highPart.classList.add('occupied-high');
                            highPart.textContent = `${palletHigh.codigo_pieza} - cant: ${palletHigh.cantidad}`;
                            stockSummary[palletHigh.codigo_pieza] = (stockSummary[palletHigh.codigo_pieza] || 0) + palletHigh.cantidad;
                            highPart.onclick = () => removePallet(palletHigh.id);
                        } else {
                            highPart.onclick = () => openModal(fila, col, "alta");
                        }

                        cell.appendChild(highPart);
                        cell.appendChild(lowPart);
                        grid.appendChild(cell);
                    }
                }
                renderStockSummary(stockSummary);
            }

            function renderStockSummary(stockSummary) {
                stockTable.innerHTML = '';
                for (const [codigo, cantidad] of Object.entries(stockSummary)) {
                    const row = document.createElement('tr');
                    row.innerHTML = `<td>${codigo}</td><td>${cantidad}</td>`;
                    stockTable.appendChild(row);
                }
            }

            async function fetchPallets() {
                const response = await fetch('/users/produccion/cctt/pallets');
                const pallets = await response.json();
                renderGrid(pallets);
            }

            document.addEventListener('DOMContentLoaded', () => {
                fetchPallets();

                document.getElementById('guardarPallet').addEventListener('click', async () => {
                    const codigo_pieza = codigoPiezaInput.value.trim();
                    const altura = alturaSelect.value;
                    if (!codigo_pieza) return;

                    await fetch('/users/produccion/cctt/pallets', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ codigo_pieza, cantidad: 1, fila: selectedFila, posicion: selectedCol, altura })
                    });

                    modal.hide();
                    fetchPallets();
                });
            });

            function openModal(fila, col, altura) {
                selectedFila = fila;
                selectedCol = col;
                alturaSelect.value = altura;
                codigoPiezaInput.value = '';
                modal.show();
            }


                

                    async function removePallet(id) {
                        if (!confirm('¿Eliminar este pallet?')) return;
                        await fetch(`/users/produccion/cctt/pallets/${id}`, { method: 'DELETE' });
                        fetchPallets();
                    }

                
                    

                    fetchPallets();
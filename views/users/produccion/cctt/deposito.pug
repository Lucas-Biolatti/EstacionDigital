doctype html
html(lang="es")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        title Gestión de Stock
        
        link(href="https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css" rel="stylesheet")
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet")
        link(rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap5.min.css")
        link(rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css")
        link(rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css")

        style.
            body {
                font-family: Arial, sans-serif;
                text-align: center;
            }
            .container {
                display: flex;
                justify-content: center;
                align-items: flex-start;
                gap: 20px;
                margin-top: 20px;
            }
            .grid {
                display: grid;
                grid-template-columns: repeat(var(--columnas), 1fr);
                gap: 2px;
                width: 100%; /* Ajuste dinámico */
            }
            .grid-wrapper {
                display: flex;
                align-items: start;
            }
            .fila-numeros {
                display: flex;
                flex-direction: column;
                align-items: center;
                margin-right: 5px; /* Espaciado entre los números y la grilla */
            }
            .fila-numero {
                width: 30px; /* Mantiene el ancho fijo */
                height: 80px; /* Coincide con la altura de las celdas */
                display: flex;
                justify-content: center;
                align-items: center;
                font-weight: bold;
                border: 1px solid #000;
                box-sizing: border-box;
                margin-bottom:5px;
            }
            .grid-container {
                display: grid;
                grid-template-columns: repeat(7, 1fr); /* Se actualizará en JS */
                gap: 5px;
            }
            .cell {
                width: 80px;
                height: 80px;
                border: 1px solid #000;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: space-between;
                cursor: pointer;
                background-color: lightgray;
                position: relative;
                font-size: 0.5rem;
            }
            .half {
                width: 100%;
                height: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                border-bottom: 1px solid #000;
            }
            .occupied-low {
                background-color: steelblue;
                color: white;
            }
            .occupied-high {
                background-color: darkblue;
                color: white;
            }
            .table-container {
                border: 1px solid #000;
                padding: 10px;
                background: white;
            }
            table {
                width: 100%;
                border-collapse: collapse;
            }
            th, td {
                border: 1px solid black;
                padding: 8px;
                text-align: center;
            }
            th {
                background-color: #f2f2f2;
            }
            .search-container {
                margin: 10px 0;
                text-align: center;
            }

            #searchInput {
                padding: 5px;
                width: 200px;
            }

            #searchButton {
                padding: 5px 10px;
                cursor: pointer;
            }

            .highlight {
                border: 3px solid red;
            }
            .search-message {
                margin: 10px 0;
                color: red;
                font-weight: bold;
                display: none; /* Ocultarlo inicialmente */
            }
    
    body
        h1 Gestión de Stock - Depósito
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Buscar código...">
            <button id="searchButton">Buscar</button>
        </div>
        <div id="searchMessage" class="search-message"></div>
        div.container
            div
                div.grid-wrapper
                    div#filaNumeros.fila-numeros
                    div#grid.grid-container
            div.table-container
                h2 Resumen de Stock
                table
                    thead
                        tr
                            th Código de Pieza
                            th Cantidad Total
                    tbody#stockTable
        
        // Modal para agregar pallets
        <div class="modal fade" id="modal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Agregar Pallet</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="modalForm">
                    <div class="mb-3">
                        <label for="selectPieza" class="form-label">Pieza</label>
                        <select id="selectPieza" class="form-select" required></select>
                    </div>
                    <div class="mb-3">
                        <label for="selectKit" class="form-label">Kit</label>
                        <select id="selectKit" class="form-select" required>
                        <option value="k1">K1</option>
                        <option value="k2">K2</option>
                        <option value="k3">K3</option>
                        <option value="k4">K4</option>
                        <option value="k5">K5</option>
                        <option value="k6">K6</option>
                        <option value="k7">K7</option>
                        <option value="k8">K8</option>
                        <option value="k9">K9</option>
                        <option value="k10">K10</option>
                        <option value="k11">K11</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="codigo_pieza" class="form-label">Código de Pieza</label>
                        <input id="codigo_pieza" type="text" class="form-control" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="altura" class="form-label">Altura</label>
                        <select id="altura" class="form-select" required>
                        <option value="baja">Baja</option>
                        <option value="alta">Alta</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="cantidad" class="form-label">Cantidad</label>
                        <input id="cantidad" type="number" class="form-control" min="1" required>
                    </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" id="guardarPallet" class="btn btn-primary">Guardar</button>
                </div>
                </div>
            </div>
            </div>
        
        script(src="https://code.jquery.com/jquery-3.5.1.js")
        script(src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js")
        script(src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js")   
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js")
        script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js")
        script(src="https://cdn.jsdelivr.net/npm/chart.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.2.0/chartjs-plugin-datalabels.min.js")
        
       
        script.
            //Opcion de busqueda dentro de las celdas
            document.getElementById('searchButton').addEventListener('click', () => {
                const searchValue = document.getElementById('searchInput').value.trim().toLowerCase();
                const searchMessage = document.getElementById('searchMessage');

                // Elimina los resaltados previos
                document.querySelectorAll('.cell').forEach(cell => {
                    cell.classList.remove('highlight');
                });

                searchMessage.style.display = 'none'; // Oculta el mensaje al iniciar una nueva búsqueda

                if (searchValue) {
                    let matchFound = false; // Variable para rastrear si hay coincidencias

                    // Busca y resalta las celdas que contienen el texto
                    document.querySelectorAll('.cell').forEach(cell => {
                        const lowText = cell.querySelector('.half[data-altura="baja"]')?.textContent.toLowerCase() || '';
                        const highText = cell.querySelector('.half[data-altura="alta"]')?.textContent.toLowerCase() || '';

                        if (lowText.includes(searchValue) || highText.includes(searchValue)) {
                            cell.classList.add('highlight');
                            matchFound = true;
                        }
                    });

                    // Si no hay coincidencias, muestra el mensaje
                    if (!matchFound) {
                        searchMessage.textContent = 'No se encontraron coincidencias.';
                        searchMessage.style.display = 'block';
                    }
                }
            });

            // Permite buscar presionando Enter en el input
            document.getElementById('searchInput').addEventListener('keyup', (e) => {
                if (e.key === 'Enter') {
                    document.getElementById('searchButton').click();
                }
            });
            const filas = 34;
            const columnas = 8;
            const grid = document.getElementById('grid');
            const filaNumeros = document.getElementById('filaNumeros');
            const modal = new bootstrap.Modal(document.getElementById('modal'));
            const codigoPiezaInput = document.getElementById('codigo_pieza');
            const alturaSelect = document.getElementById('altura');
            let selectedFila, selectedCol;
            const stockTable = document.getElementById('stockTable');
            //Armado del Grid y ordenamiento de datos
            function renderGrid(pallets) {
                grid.style.setProperty('--columnas', columnas);
                grid.style.gridTemplateColumns = `repeat(${columnas}, 1fr)`; 
                grid.innerHTML = '';
                filaNumeros.innerHTML = '';
                const stockSummary = {};

                for (let fila = 1; fila <= filas; fila++) {
                    const filaNumero = document.createElement('div');
                    filaNumero.classList.add('fila-numero');
                    filaNumero.textContent = fila;
                    filaNumeros.appendChild(filaNumero);

                    for (let col = 1; col <= columnas; col++) {
                        const cell = document.createElement('div');
                        cell.classList.add('cell');
                        cell.dataset.fila = fila;
                        cell.dataset.columna = col;

                        const lowPart = document.createElement('div');
                        lowPart.classList.add('half');
                        lowPart.dataset.altura = "baja";

                        const highPart = document.createElement('div');
                        highPart.classList.add('half');
                        highPart.dataset.altura = "alta";

                        const palletLow = pallets.find(p => p.fila === fila && p.posicion === col && p.altura === "baja");
                        const palletHigh = pallets.find(p => p.fila === fila && p.posicion === col && p.altura === "alta");

                        if (palletLow) {
                            lowPart.classList.add('occupied-low');
                            lowPart.textContent = `${palletLow.codigo_pieza} - ${palletLow.pieza} ${palletLow.kit} cant: ${palletLow.cantidad}`;
                            stockSummary[palletLow.codigo_pieza] = (stockSummary[palletLow.codigo_pieza] || 0) + palletLow.cantidad;
                            lowPart.onclick = () => removePallet(palletLow.id);
                        } else {
                            lowPart.onclick = () => openModal(fila, col, "baja");
                        }

                        if (palletHigh) {
                            highPart.classList.add('occupied-high');
                            highPart.textContent = `${palletHigh.codigo_pieza} - ${palletHigh.pieza} ${palletHigh.kit} cant: ${palletHigh.cantidad}`;
                            stockSummary[palletHigh.codigo_pieza] = (stockSummary[palletHigh.codigo_pieza] || 0) + palletHigh.cantidad;
                            highPart.onclick = () => removePallet(palletHigh.id);
                        } else {
                            highPart.onclick = () => openModal(fila, col, "alta");
                        }

                        cell.appendChild(highPart);
                        cell.appendChild(lowPart);
                        grid.appendChild(cell);
                    }
                }
                renderStockSummary(stockSummary);
            }
            //Manejo del Stock
            function renderStockSummary(stockSummary) {
                stockTable.innerHTML = '';
                for (const [codigo, cantidad] of Object.entries(stockSummary)) {
                    const row = document.createElement('tr');
                    row.innerHTML = `<td>${codigo}</td><td>${cantidad}</td>`;
                    stockTable.appendChild(row);
                }
            }
            //Trae los datos de la BD
            async function fetchPallets() {
                const response = await fetch('/users/produccion/cctt/pallets');
                const pallets = await response.json();
                renderGrid(pallets);
            }
            //MAneja los datos que van en las celdas
            document.addEventListener('DOMContentLoaded', () => {
                fetchModelos(); // Cargar los datos al inicio
                fetchPallets();

                document.getElementById('guardarPallet').addEventListener('click', async () => {
                    const pieza = document.getElementById('selectPieza').value;
                    const kit = document.getElementById('selectKit').value;
                    const codigo_pieza = document.getElementById('codigo_pieza').value;
                    const altura = document.getElementById('altura').value;
                    const cantidad = parseInt(document.getElementById('cantidad').value, 10);

                    if (!pieza || !kit || !codigo_pieza || cantidad <= 0) return;

                    await fetch('/users/produccion/cctt/pallets', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ pieza, kit, codigo_pieza, cantidad, fila: selectedFila, posicion: selectedCol, altura })
                        
                    });
                    console.log(pieza, kit, codigo_pieza)
                    modal.hide();
                    fetchPallets();
                });
            });

            // Fetch para precargar los modelos y los códigos de pieza
            async function fetchModelos() {
                const response = await fetch('/users/modelos'); // Cambiar la ruta según tu API
                const modelos = await response.json();

                const selectPieza = document.getElementById('selectPieza');
                selectPieza.innerHTML = modelos.map(modelo => `<option value="${modelo.modelo}">${modelo.modelo}</option>`).join('');

                selectPieza.addEventListener('change', () => {
                    const selectedModel = modelos.find(modelo => modelo.modelo === selectPieza.value);
                    if (selectedModel) {
                        document.getElementById('codigo_pieza').value = selectedModel.proyecto;
                    }
                });

                // Precargar el primer modelo al abrir el modal
                if (modelos.length > 0) {
                    selectPieza.value = modelos[0].modelo;
                    document.getElementById('codigo_pieza').value = modelos[0].proyecto;
                }
            }
            //Manejo del formulario modal
            function openModal(fila, col, altura) {
                selectedFila = fila;
                selectedCol = col;
                alturaSelect.value = altura;
                codigoPiezaInput.value = '';
                modal.show();
            }
            //Manejo para eliminar palet del stock
            async function removePallet(id) {
                if (!confirm('¿Eliminar este pallet?')) return;
                await fetch(`/users/produccion/cctt/pallets/${id}`, { method: 'DELETE' });
                fetchPallets();
            }

                
                    

            fetchPallets();